#include <bits/stdc++.h> 

int minsum(int i,int j,vector<vector<int>> &grid,vector<vector<int>> &dp)
{
    if (i == 0 && j == 0) {
      return grid[0][0];
    }
    if (i < 0 || j < 0) {
      return 10000;
    }
    int up = grid[i][j] + minsum(i-1,j,grid,dp);
    int left = grid[i][j] + minsum(i,j-1,grid,dp);

    dp[i][j] = min(left,up); 
    return dp[i][j];

}

int minSumPath(vector<vector<int>> &grid) {
    // Write your code here.

    int n = grid.size();
    int m = grid[0].size();
    vector<vector<int>> dp(n, vector<int>(m, -1));
 
    return minsum(n-1,m-1,grid,dp);
}



